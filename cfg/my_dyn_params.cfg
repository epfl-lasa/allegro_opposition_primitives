#!/usr/bin/env python

PACKAGE = "allegro_opposition_primitives"
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
 #       Name       Type      Level Description     Default Min   Max
grasp_enum = gen.enum([	gen.const("grasp_none", str_t, "grasp_none", "Home position"),
						gen.const("precision_pinch", str_t, "p0_ttOft12", ""),
						gen.const("writing_tripod", str_t, "p0_ttOs2tip/p1_ttOft1/p2_ft1Os2", ""),
						gen.const("precision_tap_2_finger", str_t, "p0_ttOs1/p1_ttOft2", ""),
						gen.const("precision_tap_3_finger", str_t, "p0_ttOs1/p1_ttOft23", ""),
						gen.const("book_grasp", str_t, "p0_tsOfs123", ""),																		
						gen.const("scissor", str_t, "p0_tsOfs12", ""),
						gen.const("cutting_hammering", str_t, "p0_pOfs23/p1_tsOs2/p2_ttOft1", ""),
						gen.const("jug_handle", str_t, "p0_pOf23/p1_pOfs1/p2_tsOs1", ""),
						gen.const("pan_handle", str_t, "p0_pOf23/p1_tsOs1", ""),
						gen.const("open_cap", str_t, "p0_tsOs2/p1_pOfs1", ""),	
						gen.const("one_hand_unscrew", str_t, "p0_pOfs23/p1_ttOft1", ""),																													
						gen.const("power_cylinder_3_finger", str_t, "p0_tsOfs123/p1_ttOp/p2_pOft123", ""),
						gen.const("power_cylinder_2_finger", str_t, "p0_tsOfs12/p1_ttOp/p2_pOft12", ""),
						gen.const("power_sphere_3_finger", str_t, "p0_pOft123/p1_ttOp/p2_tsOfs123", ""),						
						gen.const("power_sphere_2_finger", str_t, "p0_pOft12/p1_ttOp/p2_tsOfs12", ""),
						gen.const("lateral_clamp", str_t, "p0_tsOs12", ""),							
						gen.const("trigger", str_t, "p0_pOfs23/p1_tsdOpext", ""),													
						gen.const("power_sphere_lateral_smalldiameter", str_t, "p0_tsOs2/p1_ttOp/p2_pOfs1", "",),
						gen.const("power_sphere_lateral_largediameter", str_t, "p0_tsOs3/p1_ttOp/p2_pOfs12", "")], "Grasp choice")

gen.add("grasp", str_t, 0, "Grasp choice", "grasp_none", edit_method=grasp_enum)

gen.add("close", bool_t, 0, "Close the grasp", False)

primitive_enum = gen.enum([	gen.const("p0", int_t, 0, "primtive 0"),
							gen.const("p1", int_t, 1, "primtive 1"),
							gen.const("p2", int_t, 2, "primtive 2"),
							gen.const("p3", int_t, 3, "primtive 3"),
							gen.const("p4", int_t, 4, "primtive 4"),
							gen.const("p5", int_t, 5, "primtive 5"),
							gen.const("p6", int_t, 6, "primtive 6")], "The active primitive")
gen.add("primitive", int_t, 0, "The active primitive", 0, 0, 6, edit_method=primitive_enum)
gen.add("close_level", double_t, 0, "Governs speed of closing", 0.07, 0.001, 0.4)
gen.add("squeeze_level", double_t, 0, "Governs magnitude of directional internal forces", 0.07, 0.001, 0.6)


exit(gen.generate(PACKAGE, "allegro_opposition_primitives", "my_dyn_params"))

